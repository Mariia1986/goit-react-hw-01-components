{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","width","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","el","style","background","Math","random","toString","substring","toUpperCase","item","percentage","id","defaultProps","FriendListItem","isOnline","backgroundColor","status","FriendList","friends","friendLlist","TransactionHistory","items","transactionHistory","Table","striped","bordered","hover","size","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.177e8bc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__18Xzk\",\"description\":\"Profile_description__3oCba\",\"avatar\":\"Profile_avatar__3gy9s\",\"stats\":\"Profile_stats__2WWjk\",\"name\":\"Profile_name__3YHMt\",\"quantity\":\"Profile_quantity__YKxco\",\"label\":\"Profile_label__14Dpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2NAKZ\",\"statList\":\"Statistics_statList__2wGkk\",\"label\":\"Statistics_label__1pM1S\",\"percentage\":\"Statistics_percentage__1_ue3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__EwVjU\",\"status\":\"FriendListItem_status__myLjv\",\"avatar\":\"FriendListItem_avatar__3BPRQ\",\"name\":\"FriendListItem_name__2oH2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__1Ue07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3o6kw\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img width={80} src={avatar} alt={name} className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}> {stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}> {stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}> {stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      <ul className={s.statList}>\r\n        {stats.map((el) => {\r\n          return (\r\n            <li\r\n              key={el.id}\r\n              style={{\r\n                background:\r\n                  \"#\" +\r\n                  (Math.random().toString(16) + \"000000\")\r\n                    .substring(2, 8)\r\n                    .toUpperCase(),\r\n              }}\r\n              className={s.item}\r\n            >\r\n              <span className={s.label}>{el.label}</span>\r\n              <span className={s.percentage}>{el.percentage}%</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport s from \"./FriendListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span\r\n        style={{ backgroundColor: isOnline ? \"#008000\" : \"#ff0000\" }}\r\n        className={s.status}\r\n      >\r\n        {isOnline}\r\n      </span>\r\n\r\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n\r\n      <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n","import { element } from \"prop-types\";\r\nimport React from \"react\";\r\nimport s from \"./FriendList.module.css\";\r\nimport FriendListItem from \"./FriendListItem/FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={s.friendLlist}>\r\n      {friends.map((el) => {\r\n        return (\r\n          <FriendListItem\r\n            avatar={el.avatar}\r\n            name={el.name}\r\n            isOnline={el.isOnline}\r\n            key={el.id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport s from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <div className={s.transactionHistory}>\r\n    <Table striped bordered hover size=\"sm\" >\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((el) => {\r\n          return (\r\n            <tr key={el.id}>\r\n              <td>{el.type}</td>\r\n              <td>{el.amount}</td>\r\n              <td>{el.currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import \"./App.css\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport user from \"./db/users.json\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport statisticalData from \"./db/statistical-data.json\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\nimport friends from \"./db/friends.json\";\r\nimport transactions from \"./db/transactions.json\";\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}